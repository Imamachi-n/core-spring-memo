(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{169:function(a,e,t){"use strict";t.r(e);var r=t(0),i=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"spring-fest-2018"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spring-fest-2018","aria-hidden":"true"}},[a._v("#")]),a._v(" Spring Fest 2018")]),a._v(" "),t("h2",{attrs:{id:"the-state-of-spring-java-and-kotlin"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#the-state-of-spring-java-and-kotlin","aria-hidden":"true"}},[a._v("#")]),a._v(" The State of Spring, Java and Kotlin.")]),a._v(" "),t("p",[a._v("###GraalVM\nJVM 言語だけでなく、Python, Ruby といったスクリプト言語や C や C++といった LLVM を実行できる共通ランタイム。\nSpring Boot の実行デモでは、JVM 上と比較してかなり早い印象（0.005-0.006）。")]),a._v(" "),t("h3",{attrs:{id:"r2dbc"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#r2dbc","aria-hidden":"true"}},[a._v("#")]),a._v(" R2DBC")]),a._v(" "),t("p",[a._v("Reactive Relational Database Connectivity\nMinimal dricer SPI\nSpring Data R2DBC")]),a._v(" "),t("p",[a._v("Similar tothe new Spring data jdbc project but for reactive.\nDatabaseclient functinoal API\nrepository pattern support\n来年提供される。")]),a._v(" "),t("h3",{attrs:{id:"rsocket"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rsocket","aria-hidden":"true"}},[a._v("#")]),a._v(" RSocket")]),a._v(" "),t("p",[a._v("reactive streams back pressure over the network")]),a._v(" "),t("h3",{attrs:{id:"spring-fu"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spring-fu","aria-hidden":"true"}},[a._v("#")]),a._v(" Spring Fu")]),a._v(" "),t("p",[a._v("Spring Fu is an incubator inteneded to mature experimental features before release (Spring boot etx...).\nfaster and lighter spring boot using Functional beans(Netty vs functional)")]),a._v(" "),t("h3",{attrs:{id:"jafu-confuguration"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jafu-confuguration","aria-hidden":"true"}},[a._v("#")]),a._v(" jafu confuguration")]),a._v(" "),t("p",[a._v("Java")]),a._v(" "),t("h3",{attrs:{id:"kofu-configuration"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kofu-configuration","aria-hidden":"true"}},[a._v("#")]),a._v(" Kofu configuration")]),a._v(" "),t("p",[a._v("Kotlin")]),a._v(" "),t("h2",{attrs:{id:"hall-決済システムの内製化への旅-spring-と-pcf-で作るクラウドネイティブなシステム開発"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hall-決済システムの内製化への旅-spring-と-pcf-で作るクラウドネイティブなシステム開発","aria-hidden":"true"}},[a._v("#")]),a._v(" Hall: 決済システムの内製化への旅 - Spring と PCF で作るクラウドネイティブなシステム開発")]),a._v(" "),t("h3",{attrs:{id:"内製化に至る道のり"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内製化に至る道のり","aria-hidden":"true"}},[a._v("#")]),a._v(" 内製化に至る道のり")]),a._v(" "),t("p",[a._v("Spring boot, Selenium/Selenide\nGithub, Jira, Confluence, Slack")]),a._v(" "),t("p",[a._v("サービス監視の質を高める\nElastichSearch\nKibana\nなど。")]),a._v(" "),t("p",[a._v("開発プロジェクトの支援を開始。古いアーキテクチャを刷新。\nspring boot, cloud\nJenkins, Nexus, sonarqube")]),a._v(" "),t("h3",{attrs:{id:"開発対象・オンライン決済サービス"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#開発対象・オンライン決済サービス","aria-hidden":"true"}},[a._v("#")]),a._v(" 開発対象・オンライン決済サービス")]),a._v(" "),t("p",[a._v("新システムに求めるもの")]),a._v(" "),t("ul",[t("li",[a._v("スピード感のある開発・リリース")]),a._v(" "),t("li",[a._v("継続的な改善のサイクル")]),a._v(" "),t("li",[a._v("監視が用意で障害に強いシステム")])]),a._v(" "),t("p",[a._v("開発ベンダに頼り切っていてはスピード感のある開発ができない。\n→ 内製化へ")]),a._v(" "),t("p",[a._v("導入したもの\nPivotal Cloud Foundry")]),a._v(" "),t("h3",{attrs:{id:"pivotal-cloud-foundry-を導入した理由"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pivotal-cloud-foundry-を導入した理由","aria-hidden":"true"}},[a._v("#")]),a._v(" Pivotal Cloud Foundry を導入した理由")]),a._v(" "),t("p",[a._v("Kubernetes を支援する Pivotal Container Service。\nOS image, Runtime Layer, Service Brokerage, Application Layer を作る")]),a._v(" "),t("p",[a._v("アプリを実行する環境をプラットフォームを使って、Pivotal Application Service\nApplication Layer のみを作る\n→ 抽象化レイヤーの違い")]),a._v(" "),t("p",[a._v("各設定がプラットフォーム側で自動で行われる（テスト、ビルド、ロードバランサ、ファイアウォール、モニタリングツール、ロギングなどの設定）。\n→ デプロイのスピードが早くなる。")]),a._v(" "),t("p",[a._v("プラットフォーム運用者：プラットフォームの構築・管理に専念。\nアプリケーション開発者：業務の設計・実装に集中。")]),a._v(" "),t("p",[a._v("12 Factor App：ベンダーロックインされない。他のプラットフォームでも動くアプリを作れる。\n→Pivotal が技術支援。")]),a._v(" "),t("h3",{attrs:{id:"paas-vs-kubernetes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#paas-vs-kubernetes","aria-hidden":"true"}},[a._v("#")]),a._v(" PaaS vs Kubernetes")]),a._v(" "),t("p",[a._v("Pivotal Cloud Foundry を使うことで、開発にフォーカスしたい。\nPaaS だと、やることが制限されている分、開発に集中できる。")]),a._v(" "),t("p",[a._v("Kubernetes だと、なんでもできる分、管理などがややこしくなる。")]),a._v(" "),t("p",[a._v("Concourse\nNexus\nRabbitMQ\nGrafana\nなどなど")]),a._v(" "),t("h2",{attrs:{id:"手に入れたアプリケーション構成"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#手に入れたアプリケーション構成","aria-hidden":"true"}},[a._v("#")]),a._v(" 手に入れたアプリケーション構成")]),a._v(" "),t("p",[a._v("API Gateway を使ってる（Spring Cloud Gateway で実装）。\nすべてのアプリは Spring boot で実装。")]),a._v(" "),t("p",[a._v("ある REST API で障害が起こった場合、障害の伝播により API Gateway が障害を起こし、\n他のサービスにも影響が出る。")]),a._v(" "),t("p",[a._v("Circuit Breaker を実装。")]),a._v(" "),t("p",[a._v("システム間通信は、Hystrix を使うことで、上記の問題をクリア。\nスレッドの枯渇を防ぐ。")]),a._v(" "),t("p",[a._v("Spring Cloud Stream を使って、非同期でメッセージをキューイング。\nNotification Gateway から、加盟店に対して、通知処理が届く。\nDead Error Queue を投げて、リソースの枯渇を防ぐ。")]),a._v(" "),t("p",[a._v("負荷がかかった場合、Cloud Foundy 側で、自動で App インスタンスを増やせる。\nスケールのルール設定を GUI で作ることができる。\nスケールイン・アウトも容易に可能。")]),a._v(" "),t("h3",{attrs:{id:"アプリ実装の観点で重要な-5-factors"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#アプリ実装の観点で重要な-5-factors","aria-hidden":"true"}},[a._v("#")]),a._v(" アプリ実装の観点で重要な 5 Factors")]),a._v(" "),t("ul",[t("li",[a._v("Config: 環境に依存する設定項目を環境変数に格納")]),a._v(" "),t("li",[a._v("Processes, port binding, concurrency：CF, Spring boot がやってくれる。")]),a._v(" "),t("li",[a._v("logs：ログは標準出力しておけば、CF が拾ってくれる。")])]),a._v(" "),t("h3",{attrs:{id:"concourse-ci"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#concourse-ci","aria-hidden":"true"}},[a._v("#")]),a._v(" Concourse CI")]),a._v(" "),t("p",[a._v("CI ツール。ビルド・デプロイパイプラインの構築。\n実行環境は Docker イメージで用意。\nジョブの設定は、YAML ファイルで設定。\nMaven, JUnit5, sonarqube を実行後, Nexus にアップロード、CF にアプリ展開。")]),a._v(" "),t("h3",{attrs:{id:"jmeter-による負荷テスト、e2e-テスト（html-レポート）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jmeter-による負荷テスト、e2e-テスト（html-レポート）","aria-hidden":"true"}},[a._v("#")]),a._v(" JMeter による負荷テスト、E2E テスト（HTML レポート）")]),a._v(" "),t("p",[a._v("開発中は JMeter によるテストを毎日継続的に自動で実行。\nレポートのスクリーンショットを Slack でメンバーに共有。")]),a._v(" "),t("h3",{attrs:{id:"java-の複数バージョンでのユニットテスト"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java-の複数バージョンでのユニットテスト","aria-hidden":"true"}},[a._v("#")]),a._v(" Java の複数バージョンでのユニットテスト")]),a._v(" "),t("p",[a._v("それぞれの Java の Docker イメージを用意して、並列でテスト。\n次期バージョンでも動作するかどうか、早い段階でテストしておく。\n⇒Java アップデートの弊害を早期に検知できるように。")]),a._v(" "),t("h3",{attrs:{id:"java-の更新についていく-攻めこそ最大の守り"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java-の更新についていく-攻めこそ最大の守り","aria-hidden":"true"}},[a._v("#")]),a._v(" Java の更新についていく - 攻めこそ最大の守り")]),a._v(" "),t("p",[a._v("簡単にデプロイ可能な開発・本番環境（Dev/Staging/Prod）を用意すること。\n塩漬けするのではなく、アップデートし続けられる環境を準備。")]),a._v(" "),t("h3",{attrs:{id:"observability"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#observability","aria-hidden":"true"}},[a._v("#")]),a._v(" Observability")]),a._v(" "),t("p",[a._v("Metrics（Micrometer, Grafana, Prometeus）, Tracing（Zipkin）, Logging（Kibana） の３つの観点から監視。\n⇒ しきい値を超えると、Slack に通知される。\n⇒ Spring 側は、１つの依存ライブラリを追加するだけで OK。\n⇒ アプリケーションログなどを収集。")]),a._v(" "),t("p",[a._v("⇒ Zipkin でトレース ID から検索が容易に。\n⇒ 実行された SQL の実行時間などを調べることもできる。")]),a._v(" "),t("p",[a._v("外注に頼り切ったサービス開発を積み重ねてもプラットフォームを維持できない。")]),a._v(" "),t("h2",{attrs:{id:"annex-spring-♥-gcp-ー-spring-と-gcp-の素敵な関係"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#annex-spring-♥-gcp-ー-spring-と-gcp-の素敵な関係","aria-hidden":"true"}},[a._v("#")]),a._v(" Annex: Spring ♥ GCP ー Spring と GCP の素敵な関係")]),a._v(" "),t("p",[a._v("GAE と GKE の使い方について")]),a._v(" "),t("h3",{attrs:{id:"gcp-を使うメリット"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gcp-を使うメリット","aria-hidden":"true"}},[a._v("#")]),a._v(" GCP を使うメリット")]),a._v(" "),t("p",[a._v("Google の SRE（サービスが動くことを保証する部門）がサービスを守ってくれる（スケール・インフラ力）。\nAWS や Azure と違うところは、「ネットワーク」。Google のサービスで使っているシステム向けに作った\n内製化したサービスを GCP で使える。")]),a._v(" "),t("h3",{attrs:{id:"java-を-gcp-で使う上で使うサービス"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java-を-gcp-で使う上で使うサービス","aria-hidden":"true"}},[a._v("#")]),a._v(" Java を GCP で使う上で使うサービス")]),a._v(" "),t("p",[a._v("GCE: Compute Engine（VM）\nGKE: Kubernetes Engine\nGAE: App Engine")]),a._v(" "),t("h3",{attrs:{id:"app-engine"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#app-engine","aria-hidden":"true"}},[a._v("#")]),a._v(" App Engine")]),a._v(" "),t("p",[a._v("コードを書いてデプロイするだけのアプリケーション実行基盤（PaaS）\nコードファースト:開発者にアプリケーションに専念してもらい、システム構築、管理負荷を最小化する。\nNo-Ops: 可用性とスケーラビリティはプラットフォームに組み込まれている。\n運用ツール: バージョンコントロールやトラフィックスプリットといった運用ツールが含まれている。")]),a._v(" "),t("h4",{attrs:{id:"フレキシブル環境"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#フレキシブル環境","aria-hidden":"true"}},[a._v("#")]),a._v(" フレキシブル環境")]),a._v(" "),t("p",[a._v("サポート言語:\nJava8, Python, Node.js, Ruby, PHP, .NET.core, Go\nカスタム環境: Docker\nカスタマイズが効くが、立ち上がりに時間がかかる。\nスケーリングができない…。")]),a._v(" "),t("h4",{attrs:{id:"スタンダード環境"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#スタンダード環境","aria-hidden":"true"}},[a._v("#")]),a._v(" スタンダード環境")]),a._v(" "),t("p",[a._v("使えるライブラリに制限がある。\nサンドボックス。")]),a._v(" "),t("h4",{attrs:{id:"スタンダード環境（第二世代）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#スタンダード環境（第二世代）","aria-hidden":"true"}},[a._v("#")]),a._v(" スタンダード環境（第二世代）")]),a._v(" "),t("p",[a._v("オープンソース、Idiomatic experience（他の環境でも同じ体験をできるように）\nGCP 固有の設定や制限がないように設計されている。\nサポートランタイム：Java, Node.js, Python など")]),a._v(" "),t("p",[a._v("⇒ スタンダード環境の第二世代を選択するのが良い。")]),a._v(" "),t("h3",{attrs:{id:"spring-boot-アプリを-app-engine-にデプロイ（デモ）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spring-boot-アプリを-app-engine-にデプロイ（デモ）","aria-hidden":"true"}},[a._v("#")]),a._v(" Spring Boot アプリを App Engine にデプロイ（デモ）")]),a._v(" "),t("p",[a._v("Spring Boot のパッケージを WAR にする（ランタイムに Jetty を使っている関係）。\nSpring Cloud で GCP サポートも受けられる（Pivotal と Google の協業）。\n⇒ 現時点では、設定ファイルをプロジェクトに組み込む必要がある。")]),a._v(" "),t("ol",[t("li",[a._v("App Engine のプラグインを導入する。")]),a._v(" "),t("li",[a._v("App Engine の設定ファイルを作る（appengine-app.xml）。")]),a._v(" "),t("li",[a._v("App Engine へデプロイ")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("./mvnw appengine:deploy\n")])])]),t("h4",{attrs:{id:"バージョンスプリッティング"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#バージョンスプリッティング","aria-hidden":"true"}},[a._v("#")]),a._v(" バージョンスプリッティング")]),a._v(" "),t("p",[a._v("アップデート後に、システムを止めることなくバーションが切り替わる。")]),a._v(" "),t("h4",{attrs:{id:"トラフィックスプリッティング"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#トラフィックスプリッティング","aria-hidden":"true"}},[a._v("#")]),a._v(" トラフィックスプリッティング")]),a._v(" "),t("p",[a._v("トラフィックを振り分けてくれる。\nアプリ Ver1 と Ver2 で例えば５０％ごとに振り分けたり。")]),a._v(" "),t("h4",{attrs:{id:"オートスケール"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#オートスケール","aria-hidden":"true"}},[a._v("#")]),a._v(" オートスケール")]),a._v(" "),t("p",[a._v("負荷がかかるとインスタンスが増える（VM と比較して、圧倒的に速いスピードでスケールする）。\nデモでは、すぐに９つのインスタンスが立ち上がっていた。\n課金の面でも、VM と比較して節約できる（App Engine だと VM と比較して、使われていないインスタンスがすぐにスケールダウンするため）。")]),a._v(" "),t("h3",{attrs:{id:"kubernetes-engine"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes-engine","aria-hidden":"true"}},[a._v("#")]),a._v(" Kubernetes Engine")]),a._v(" "),t("p",[a._v("Kubernetes は、Google 社内のコンテナオーケストレータをもとに作られた OSS。\nデファクトスタンダード。\nWrite Once, Run Anywhere。")]),a._v(" "),t("h4",{attrs:{id:"google-kubernetes-engine-gke"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#google-kubernetes-engine-gke","aria-hidden":"true"}},[a._v("#")]),a._v(" Google Kubernetes Engine(GKE)")]),a._v(" "),t("p",[a._v("Zero-Ops クラスタを目指す。\n簡単、信頼性が高い、効率性が高い。")]),a._v(" "),t("p",[a._v("Master ノードの下に、Nodepool を持つ構造。")]),a._v(" "),t("p",[a._v("ネットワークの構成や設定ファイルを作ることなく、立ち上げることができる（起動は App Engine よりもかなり遅い）。\nK8s では、pods という単位で Docker コンテナが管理されている。")]),a._v(" "),t("h3",{attrs:{id:"終わりに"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#終わりに","aria-hidden":"true"}},[a._v("#")]),a._v(" 終わりに")]),a._v(" "),t("p",[a._v("App Engine は無料枠があるので、テストに使える。")]),a._v(" "),t("h2",{attrs:{id:"hall-knative-serving-your-serverless-java-service-on-kubernetes-the-12-factor-way"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hall-knative-serving-your-serverless-java-service-on-kubernetes-the-12-factor-way","aria-hidden":"true"}},[a._v("#")]),a._v(" Hall: Knative: Serving your Serverless Java Service on Kubernetes the 12-Factor way")]),a._v(" "),t("p",[a._v("今日の資料\n@kamesh_sampath bit.ly/knserving")]),a._v(" "),t("h3",{attrs:{id:"serverless-computing"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#serverless-computing","aria-hidden":"true"}},[a._v("#")]),a._v(" Serverless computing")]),a._v(" "),t("p",[a._v("24 時間監視する必要のないアプリケーションを作成する。\nAWS Lambda が有名な例。")]),a._v(" "),t("h3",{attrs:{id:"なぜ-serverless-化なのか"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#なぜ-serverless-化なのか","aria-hidden":"true"}},[a._v("#")]),a._v(" なぜ Serverless 化なのか?")]),a._v(" "),t("ul",[t("li",[a._v("Agility")]),a._v(" "),t("li",[a._v("Event Driven")]),a._v(" "),t("li",[a._v("Focus on business differentiation")]),a._v(" "),t("li",[a._v("consistent and scalable operations\nリソースの最適化と cost saving。")])]),a._v(" "),t("h3",{attrs:{id:"architectural-evolution"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#architectural-evolution","aria-hidden":"true"}},[a._v("#")]),a._v(" Architectural evolution")]),a._v(" "),t("ul",[t("li",[a._v("Service")]),a._v(" "),t("li",[a._v("Microservice")]),a._v(" "),t("li",[a._v("Function")])]),a._v(" "),t("p",[a._v("Microservice と Function の違いはなんなのか？")]),a._v(" "),t("h3",{attrs:{id:"利点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#利点","aria-hidden":"true"}},[a._v("#")]),a._v(" 利点")]),a._v(" "),t("ul",[t("li",[a._v("AUtomatic scalability")]),a._v(" "),t("li",[a._v("automatic cost redution")]),a._v(" "),t("li",[a._v("quicker and easier development")]),a._v(" "),t("li",[a._v("better capacity utilization")]),a._v(" "),t("li",[a._v("deploy speed")])]),a._v(" "),t("h3",{attrs:{id:"欠点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#欠点","aria-hidden":"true"}},[a._v("#")]),a._v(" 欠点")]),a._v(" "),t("ul",[t("li",[a._v("Debugging")]),a._v(" "),t("li",[a._v("deployment and architectural complexity")]),a._v(" "),t("li",[a._v("vendor lock-in")]),a._v(" "),t("li",[a._v("monitoring")]),a._v(" "),t("li",[a._v("learning curve")])]),a._v(" "),t("h3",{attrs:{id:"serverless-vs-faas"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#serverless-vs-faas","aria-hidden":"true"}},[a._v("#")]),a._v(" Serverless vs FaaS")]),a._v(" "),t("p",[a._v("Event fires and then your code runs, serve services.")]),a._v(" "),t("h3",{attrs:{id:"faas-kunernetes-players"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#faas-kunernetes-players","aria-hidden":"true"}},[a._v("#")]),a._v(" FaaS Kunernetes players")]),a._v(" "),t("ul",[t("li",[a._v("kubeless")]),a._v(" "),t("li",[a._v("openWhisk")]),a._v(" "),t("li",[a._v("ruff")])]),a._v(" "),t("h3",{attrs:{id:"function-as-a-service"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#function-as-a-service","aria-hidden":"true"}},[a._v("#")]),a._v(" Function as a Service")]),a._v(" "),t("p",[a._v("OS, Data, Application を必要としない。\nBussiness Logic のみで OK（イベント駆動のイメージ）。")]),a._v(" "),t("h3",{attrs:{id:"knative"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#knative","aria-hidden":"true"}},[a._v("#")]),a._v(" Knative")]),a._v(" "),t("p",[a._v("Kubernates based platform to build, deploy and manage modern serverless workloads.\nRun anywhere on premises, in the cloud or even in a third-party data center.")]),a._v(" "),t("h4",{attrs:{id:"serving"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#serving","aria-hidden":"true"}},[a._v("#")]),a._v(" serving")]),a._v(" "),t("ul",[t("li",[a._v("building and running applications(k8s)")]),a._v(" "),t("li",[a._v("no server management(k8s)")]),a._v(" "),t("li",[a._v("fine grained deployment model(Knative)")]),a._v(" "),t("li",[a._v("executed, scaled and billed in response to the exact demand.(k8s)")])]),a._v(" "),t("p",[a._v("automatically scale down to zero...")]),a._v(" "),t("h4",{attrs:{id:"build"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#build","aria-hidden":"true"}},[a._v("#")]),a._v(" build")]),a._v(" "),t("p",[a._v("Knative pull sources, refer build templates and then push images to container repo.\nknative also pull images from repo and then rollout new revision.")]),a._v(" "),t("h4",{attrs:{id:"cncf-cloudevents-and-serverless"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cncf-cloudevents-and-serverless","aria-hidden":"true"}},[a._v("#")]),a._v(" CNCF, cloudevents and Serverless")]),a._v(" "),t("h4",{attrs:{id:"eventing"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#eventing","aria-hidden":"true"}},[a._v("#")]),a._v(" Eventing")]),a._v(" "),t("h3",{attrs:{id:"ブログ"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ブログ","aria-hidden":"true"}},[a._v("#")]),a._v(" ブログ")]),a._v(" "),t("p",[a._v("今日の内容を「Knative configuration routes and revisions.」でまとめている。\nまだ安定していない？")]),a._v(" "),t("h3",{attrs:{id:"無料の-e-bbok"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#無料の-e-bbok","aria-hidden":"true"}},[a._v("#")]),a._v(" 無料の e-bbok")]),a._v(" "),t("p",[a._v("bit.ly/mono2microdb\nbit.ly/istio-book\nbit.ly/javamicroservicesbook\nbit.ly/reactivemicroservicesbook\nbit.ly/faas-tutorial")]),a._v(" "),t("h2",{attrs:{id:"hall-pivotal-認定講師が解説！基礎からの-oauth-2-0-と-spring-security-5-1-による実装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hall-pivotal-認定講師が解説！基礎からの-oauth-2-0-と-spring-security-5-1-による実装","aria-hidden":"true"}},[a._v("#")]),a._v(" Hall: Pivotal 認定講師が解説！基礎からの OAuth 2.0 と Spring Security 5.1 による実装")]),a._v(" "),t("h3",{attrs:{id:"_1-oauth2-0-の基本用語"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-oauth2-0-の基本用語","aria-hidden":"true"}},[a._v("#")]),a._v(" 1. OAuth2.0 の基本用語")]),a._v(" "),t("p",[a._v("認可の流れを規定したプロトコル\n認証プロトコル OpenID Connect のベースになっている。\nOAuth1.0 とは完全に別物。")]),a._v(" "),t("h4",{attrs:{id:"アクセストークン"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#アクセストークン","aria-hidden":"true"}},[a._v("#")]),a._v(" アクセストークン")]),a._v(" "),t("p",[a._v("サーバのデータにアクセスするための許可書。")]),a._v(" "),t("h4",{attrs:{id:"スコープ"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#スコープ","aria-hidden":"true"}},[a._v("#")]),a._v(" スコープ")]),a._v(" "),t("p",[a._v("アクセストークンがやれることの範囲。")]),a._v(" "),t("h4",{attrs:{id:"id-とパスワード"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#id-とパスワード","aria-hidden":"true"}},[a._v("#")]),a._v(" ID とパスワード")]),a._v(" "),t("p",[a._v("パスワードを持っている人が全県を持っている。やりたい放題。\n盗まれると被害大きい。")]),a._v(" "),t("h4",{attrs:{id:"oauth2-0"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#oauth2-0","aria-hidden":"true"}},[a._v("#")]),a._v(" OAuth2.0")]),a._v(" "),t("ol",[t("li",[a._v("リソースオーナー：情報の持ち主。")]),a._v(" "),t("li",[a._v("リソースサーバー：情報を保持するサーバ")]),a._v(" "),t("li",[a._v("クライアント：リソースサーバからもらった情報を扱うアプリケーション")]),a._v(" "),t("li",[a._v("認可サーバ：アクセストークンの発行元。")])]),a._v(" "),t("p",[a._v("リソースオーナーが認可をクライアントに対して与えると、認可サーバからアクセストークンが付与され、\nアプリからサーバにアクセスできるようになる。")]),a._v(" "),t("h4",{attrs:{id:"グラントタイプ（アクセストークンの取得方法）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#グラントタイプ（アクセストークンの取得方法）","aria-hidden":"true"}},[a._v("#")]),a._v(" グラントタイプ（アクセストークンの取得方法）")]),a._v(" "),t("ul",[t("li",[a._v("認可コード")])]),a._v(" "),t("h4",{attrs:{id:"認可コードとは"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#認可コードとは","aria-hidden":"true"}},[a._v("#")]),a._v(" 認可コードとは")]),a._v(" "),t("p",[a._v("アクセストークンの引換券\n⇒ アクセストークンが Web ブラウザに渡らないようにするため。")]),a._v(" "),t("ol",[t("li",[a._v("初回アクセス")]),a._v(" "),t("li",[a._v("認可エンドポイントにリダイレクト")]),a._v(" "),t("li",[a._v("認可画面を返す")]),a._v(" "),t("li",[a._v("認可")]),a._v(" "),t("li",[a._v("認可コードの発行＋リダイレクト")]),a._v(" "),t("li",[a._v("認可コード")]),a._v(" "),t("li",[a._v("アクセストークン（認可サーバからクライアントに）")])]),a._v(" "),t("p",[a._v("認可コードがブラウザに渡っていないことがポイント。\nリフレッシュトークン。")]),a._v(" "),t("h4",{attrs:{id:"oauth2-0-仕様で未定義の部分"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#oauth2-0-仕様で未定義の部分","aria-hidden":"true"}},[a._v("#")]),a._v(" OAuth2.0 仕様で未定義の部分")]),a._v(" "),t("p",[a._v("どう認可するか決まっていない\n⇒ 開発者が作り込む。")]),a._v(" "),t("p",[a._v("認可コードを送ってきたのがクライアントかどうか BASIC 認証して判断。")]),a._v(" "),t("h3",{attrs:{id:"_3-アクセストークンを利用したリソースアクセス"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-アクセストークンを利用したリソースアクセス","aria-hidden":"true"}},[a._v("#")]),a._v(" 3. アクセストークンを利用したリソースアクセス")]),a._v(" "),t("ol",[t("li",[a._v("リソースオーナーがリクエスト。")]),a._v(" "),t("li",[a._v("リソースにアクセス（with アクセストークン）")]),a._v(" "),t("li",[a._v("アクセストークンの検証")]),a._v(" "),t("li",[a._v("ユーザ情報やスコープ")]),a._v(" "),t("li",[a._v("スコープをチェック")]),a._v(" "),t("li",[a._v("レスポンスを返す")])]),a._v(" "),t("h3",{attrs:{id:"アクセストークンやスコープの検証方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#アクセストークンやスコープの検証方法","aria-hidden":"true"}},[a._v("#")]),a._v(" アクセストークンやスコープの検証方法")]),a._v(" "),t("ol",[t("li",[a._v("認可サーバに問い合わせる（BASIC 認証）")]),a._v(" "),t("li",[a._v("共有データベースなどを利用する")]),a._v(" "),t("li",[a._v("アクセストークン自身に情報を含めておく")])]),a._v(" "),t("h3",{attrs:{id:"jwt-json-web-token"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jwt-json-web-token","aria-hidden":"true"}},[a._v("#")]),a._v(" JWT(JSON Web Token)")]),a._v(" "),t("p",[a._v("アクセストークン自身にユーザ情報やスコープなどの情報を含めることができる。\nピリオドで３つの部分に分かれる（ヘッダー、ペイロード、電子署名）。")]),a._v(" "),t("p",[a._v("ペイロードをデコードすると、JSON が含まれている。")]),a._v(" "),t("h3",{attrs:{id:"署名を利用した-jwt-の検証"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#署名を利用した-jwt-の検証","aria-hidden":"true"}},[a._v("#")]),a._v(" 署名を利用した JWT の検証")]),a._v(" "),t("p",[a._v("リソースサーバは JWT の署名で検証する。\n署名は認可サーバの秘密鍵で暗号化されている。\n⇒ 認可サーバの公開鍵で復号化する。")]),a._v(" "),t("h3",{attrs:{id:"jwk-json-web-key"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jwk-json-web-key","aria-hidden":"true"}},[a._v("#")]),a._v(" JWK (JSON Web Key)")]),a._v(" "),t("p",[a._v("認可サーバの公開鍵のもととなる情報が含まれた JSON\n認可サーバから JWK Set 形式（JWK の配列を含んだ JSON）で取得する。")]),a._v(" "),t("h3",{attrs:{id:"jwt-の弱点と対策"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jwt-の弱点と対策","aria-hidden":"true"}},[a._v("#")]),a._v(" JWT の弱点と対策")]),a._v(" "),t("p",[a._v("弱点：アクセストークンの剥奪が不可能\nリソースサーバが認可サーバに問い合わせしないため、認可サーバ側での制御が不可能。")]),a._v(" "),t("p",[a._v("対策：アクセストークンの有効期限を短くする\nだいたい数分間。\nリフレッシュトークンで新しいトークンを再取得させる。\n⇒POST でトークンエンドポイントにアクセスする。")]),a._v(" "),t("h3",{attrs:{id:"_4-認可サーバの実装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-認可サーバの実装","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.認可サーバの実装")]),a._v(" "),t("p",[a._v("Spring Security5.1 まででクライアントとリソースサーバまでしか対応してない。\n認可サーバは 5.2 に入るが、部分的な対応になる。")]),a._v(" "),t("h3",{attrs:{id:"認可サーバを作る"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#認可サーバを作る","aria-hidden":"true"}},[a._v("#")]),a._v(" 認可サーバを作る")]),a._v(" "),t("ul",[t("li",[a._v("認可サーバ機能を持ったサービスを利用する")]),a._v(" "),t("li",[a._v("KeyCloak を使う。")])]),a._v(" "),t("h3",{attrs:{id:"_5-クライアントの実装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-クライアントの実装","aria-hidden":"true"}},[a._v("#")]),a._v(" 5. クライアントの実装")]),a._v(" "),t("p",[a._v("pom.xml\napplication.yml")]),a._v(" "),t("h3",{attrs:{id:"ログアウト"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ログアウト","aria-hidden":"true"}},[a._v("#")]),a._v(" ログアウト")]),a._v(" "),t("p",[a._v("クライアントと認可サーバの両方からログアウトしないといけない。")]),a._v(" "),t("h3",{attrs:{id:"_6-リソースサーバの実装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-リソースサーバの実装","aria-hidden":"true"}},[a._v("#")]),a._v(" 6.リソースサーバの実装")]),a._v(" "),t("h3",{attrs:{id:"oauth2-0-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#oauth2-0-2","aria-hidden":"true"}},[a._v("#")]),a._v(" OAuth2.0")]),a._v(" "),t("ul",[t("li",[a._v("HTTPS 必須")]),a._v(" "),t("li",[a._v("認可コードリダイレクトなどなど")])]),a._v(" "),t("h3",{attrs:{id:"参考資料"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考資料","aria-hidden":"true"}},[a._v("#")]),a._v(" 参考資料")]),a._v(" "),t("ul",[t("li",[a._v("基礎からの OAuth2.0")])])])}],!1,null,null,null);i.options.__file="10_spring-fest-2018.md";e.default=i.exports}}]);